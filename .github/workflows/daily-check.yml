name: Daily Check

on:
  schedule:
    - cron: '0 15 * * *' # 毎日午後11時(UTC)に実行

jobs:

  daily-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 20
        
    - name: Install Dependencies
      run: npm ci
      
    - name: Get Issue Count
      id: issue_count
      run: |
        issue_count=$(gh issue list --json number --jq length)
        echo "::set-output name=count::$issue_count"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Update daily-check.json
      run: |
        tmp=$(mktemp)
        jq --arg day "$(date --iso-8601=seconds)" \
           --arg errors "${{ steps.issue_count.outputs.count }}" \
           '.day = $day | .errors = ($errors|tonumber)' \
           daily-check.json > "$tmp" && mv "$tmp" daily-check.json
           
    - name: Commit Changes
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        git config --global user.name 'GitHub Actions Bot'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/clockcrockwork/cccDataImporter.git
        git add daily-check.json
        git commit -m "Update daily-check.json"
        git push -u origin HEAD

    - name: Create Pull Request
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        gh auth login --with-token <<< "${{ secrets.GH_TOKEN }}"
        gh pr create --base main --head update-daily-check --title "Update daily-check.json" --body "Auto-updated daily-check.json"

    - name: Merge Pull Request
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        pr_number=$(gh pr list --state open --head update-daily-check --json number --jq '.[0].number')
        gh pr merge $pr_number --squash --auto

    - name: Notify Discord if errors found
      if: ${{ steps.issue_count.outputs.count != 0 }}
      run: |
        curl -X POST -H "Content-Type: application/json" -d "{\"content\": \"Open issues found: ${{ steps.issue_count.outputs.count }}\"}" ${{ secrets.ERROR_DISCORD_WEBHOOK }}
