name: Daily Update
on:
  schedule:
    - cron: "3 15 * * *"
  workflow_dispatch:
jobs:
  update-json:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install moreutils and jq
        run: sudo apt-get update && sudo apt-get install -y moreutils jq

      - name: Update daily.json
        run: |
          TODAY=$(TZ='Asia/Tokyo' date '+%Y/%m/%d %H:%M:%S')

          START_DATE=$(date -d 'yesterday 15:01' '+%Y-%m-%dT%H:%M:%SZ')
          END_DATE=$(date -d 'today 15:00' '+%Y-%m-%dT%H:%M:%S.000Z')

          REPO="${GITHUB_REPOSITORY}"
          ACTIONS_DATA=$(curl -s -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${REPO}/actions/runs?created=${START_DATE}..${END_DATE}&per_page=100")

          ACTIONS_SUMMARY=$(echo "$ACTIONS_DATA" | jq -r '
            if .workflow_runs == null or ((.workflow_runs | type) != "array") or (.workflow_runs | length == 0) then
              null
            else
              .workflow_runs
              | group_by(.name)
              | map({
                  action: .[0].name,
                  success: map(select(.conclusion == "success")) | length,
                  failure: map(select(.conclusion == "failure")) | length,
                  duration: {
                    sum: ((map(if .run_duration_ms != null then .run_duration_ms else 0 end) | add) / 1000),
                    avg: ((map(if .run_duration_ms != null then .run_duration_ms else 0 end) | add) / (length * 1000))
                  },
                  billable: ((map(if .billable.UBUNTU.total_ms != null then .billable.UBUNTU.total_ms else 0 end) | add) / 60000)
                })
            end
          ')

          # daily.jsonを更新
          if [ "$ACTIONS_SUMMARY" = "null" ]; then
            jq --arg today "$TODAY" '.day = $today | .actions = null' daily.json | sponge daily.json
          else
            jq --arg today "$TODAY" --argjson actions "$ACTIONS_SUMMARY" '
              .day = $today |
              .actions = $actions
            ' daily.json | sponge daily.json
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        shell: bash

      - name: Setup GPG key
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          git config --global user.signingkey $(gpg --list-secret-keys --keyid-format LONG | grep sec | awk '{print $2}' | cut -d'/' -f2)
          git config --global commit.gpgSign true
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Commit changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add daily.json
          git commit -S -m 'Update daily.json' <<< "$GPG_PASSPHRASE"
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        shell: bash

      - name: Create pull request
        id: cpr
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GH_TOKEN }}
          commit-message: "Update daily.json"
          branch: "update-daily-json"
          base: "origin"
          title: "Automated PR for daily.json update"
          body: "This PR is automatically created by GitHub Actions."
          labels: "automated-pr"

      - name: Auto-merge pull request
        if: steps.cpr.outputs.pull-request-number
        run: |
          gh pr merge ${{ steps.cpr.outputs.pull-request-number }} --squash --auto --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
